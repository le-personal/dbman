# @file Fig configuration file to start DBMan
# To Use just run: fig up
# If you want to daemonize use: fig up -d
# 
# DATA CONTAINERS
# You also need to create data-only containers which are not created by this fig file
# To do it do:
# 
# sudo docker run -v /var/files --name DBMAN_FILES busybox true
# sudo docker run -v /data/db --name DBMAN_DBDATA busybox true
#
# Adapt the name of those containers if you want but do not change the -v paths
# 
# MAPPING OF VOLUMES
# This file maps several directories:
# 
# /var/www this is where the application exists inside the container
# /root/.ssh the ssh keys needed to connect to servers must be here
# /var/log/supervisor in case you need to access the supervisor logs, which contains nginx and nodejs logs
# /var/files this is where the database backup files will live inside the container
# 
# ACCESS THE APPLICATION:
# http://localhost:3001 which will map to the port 80 inside the container running nginx.
# The node.js app is running on port 3000 but we don't expose that port
# 
serf:
  image: luis/serf
  expose:
   - "7373"
   - "7946"
  ports: 
   - "7373:7373"
   - "7946:7946"
web:
  image: luis/nodejs-serf
  links:
   - serf:serf
   - mongodb:mongodb
   - redis:redis
  expose:
   - "3000"
  volumes:
   - "/var/www/dbman:/var/www"
   - "/root/.ssh:/root/.ssh"
   - "/var/log/docker:/var/log/supervisor"
   - "/var/files:/var/files"
  environment:
   MONGODB_DATABASE: dbman
redis:
  image: dockerfile/redis
  expose:
   - "6379"
mongodb:
  image: luis/mongodb
  expose:
   - "27017"
  volumes:
   - "/home/docker/mongodb:/data/db"
lb:
  image: luis/nginx-lb
  ports:
    - "80:80"
  links:
    - serf:serf
  volumes:
   - "/var/nginx/db.iiiepe.net:/etc/nginx/sites-enabled"
   - "/var/www/dbman:/var/www"
   - "/var/log/docker:/var/log/supervisor"
   - "/var/files:/var/files"
